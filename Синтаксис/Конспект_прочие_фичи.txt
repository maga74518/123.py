Сраная палка , которой нет на клаве и хер её загуглишь - "    |    "


                                   !!! Множественное присвоение через тернарный оператор !!!

a, b = int(input()), int(input())
maximum, minimum = (a, b) if a > b else (b, a)
print(minimum, maximum)


                                        !!! Несколько if внутри одного print()!!!

a, b = int(input()), int(input())
print('<' if a < b else '>' if a > b else '=')



                                            !!! Оператор Switch !!!

Короче говоря оператор Switch дает возможность проверить кейс на содержание элемента , и при True впустит в тело кейса.


Сравнение на несколько значений в операторе match-case:
match - это более короткий способ записи последовательности операторов if/else

digit = int(input("Введите цифру: "))

match digit:
    case 0 | 3 | 6 | 9:
        print("Без остатка делятся на 3")
    case 1 | 4 | 7:
        print("При делении на 3 дают остаток 1")
    case 2 | 5 | 8:
        print("При делении на 3 дают остаток 2")
    case  _:
        print(f"{digit} не является цифрой")

# "Alt 0 1 2 4" == " | "


                                            !!! Range !!!

print(*range(0, 501, 5), sep="\n") - 'Рендж можно распаковывать'


                                    !!! Новый генератор списков !!!

В решениях нашел интересный генератор списков: [i.split(':') for i in iter(input, 'конец')]
(Если че итераторы не сортируются)


                                       !!! Импорт внутри принта !!!

print(__import__('os').environ['HOME'])



                                        !!! Морж и while !!!
Он продолжает заставлять пользователя вводить значения до тех пор пока не введут слово стоп.
Теперь подключаем моржевый оператор и смотрите какую красоту мы получаем:

while (phrase := input('Введите фразу: ')) != 'стоп':
  print('Продолжаем веселиться!')
print('Закончили вечеринку!')


                                !!!рекурсия!!!

def req(x, y):
    if x % y == 0 and y not in [1, x]:
        return 'NO'
    if y == 1:
        return 'YES'
    return req(x, y-1)

a = int(input())
print(req(a, a))